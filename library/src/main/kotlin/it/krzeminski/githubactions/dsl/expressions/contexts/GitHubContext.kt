package it.krzeminski.githubactions.dsl.expressions.contexts

import it.krzeminski.githubactions.dsl.expressions.ExpressionContext

/**
 * The github context contains information about the workflow run and the event that triggered the run.
 * You can also read most of the github context data in environment variables.
 * For more information about environment variables,
 * https://docs.github.com/en/actions/automating-your-workflow-with-github-actions/using-environment-variables
 *
 * See https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
 * **/
object GitHubContext : ExpressionContext("github") {

    /**
     * Types generated by the test GenerateEventPayloadTest
     *
     * We read event payloads from library/src/test/resources/payloads
     * We generate it inside       library/src/gen/kotlin/it/krzeminski/githubactions/expr
     *
     * The JSONs come from https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads
     * Feel free to add any payload you might need from that page
     * */

    val eventWorkflowDispatch = WorkflowDispatchEvent

    val eventRelease = ReleaseEvent

    val eventPullRequest = PullRequestEvent

    val eventPush = PushEvent

/** Standard properties **/
    val token by propertyToExprPath

    val job by propertyToExprPath

    val ref by propertyToExprPath

    val sha by propertyToExprPath

    val repository by propertyToExprPath

    val repository_owner by propertyToExprPath

    val repositoryUrl by propertyToExprPath

    val run_id by propertyToExprPath

    val run_number by propertyToExprPath

    val retention_days by propertyToExprPath

    val run_attempt by propertyToExprPath

    val actor by propertyToExprPath

    val workflow by propertyToExprPath

    val head_ref by propertyToExprPath

    val base_ref by propertyToExprPath

    val event_name by propertyToExprPath

    val server_url by propertyToExprPath

    val api_url by propertyToExprPath

    val graphql_url by propertyToExprPath

    val ref_name by propertyToExprPath

    val ref_protected by propertyToExprPath

    val ref_type by propertyToExprPath

    val secret_source by propertyToExprPath

    val workspace by propertyToExprPath

    val action by propertyToExprPath

    val event_path by propertyToExprPath

    val action_repository by propertyToExprPath

    val action_ref by propertyToExprPath

    val path by propertyToExprPath

    val env by propertyToExprPath

    val actor_id by propertyToExprPath

    val artifact_cache_size_limit by propertyToExprPath

    val repository_id by propertyToExprPath

    val repository_owner_id by propertyToExprPath

    val step_summary by propertyToExprPath
}
